#                    Copyright (c) 2019-2019
#                      LREN CHUV, Lausanne
#
#                      All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright notice
# and this permission notice appear in all copies of the software, derivative
# works or modified versions, and any portions thereof, and that both notices
# appear in supporting documentation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. THE AUTHORS AND ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE
# DISCLAIM ANY LIABILITY OF ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE
# USE OF THIS SOFTWARE.

version: '2'
# the following environment variables are expected to be available when running
# docker-compose up
# - mipmap_source: The folder containing the data to convert and the associated configuration
# - mipmap_target: Where to store the result of the conversion
# - mipmap_db: Where to store the PostgreSQL DB files for MIPMap

# WARNING: For some reason, during the first start the postgres DB is not always ready fast
#          enough, just make sure to restart everything if it fails the first time.


services:

  i2b2_setup:
    image: "hbpmip/i2b2-setup:1.5.2"
    container_name: "i2b2-setup"
    command: "upgrade head"
    external_links:
      - "{{ postgresql_container }}:df_postgres"
    environment:
      - DB_URL=postgresql://{{ postgresql_user }}:{{ postgresql_pwd }}@df_postgres:5432/{{ capture_db }}
    network_mode: bridge


  i2b2_setup_harmonized:
    image: "hbpmip/i2b2-setup:1.5.2"
    container_name: "i2b2-setup-harmonized"
    command: "upgrade head"
    external_links:
      - "{{ postgresql_container }}:df_postgres"
    environment:
      - DB_URL=postgresql://{{ postgresql_user }}:{{ postgresql_pwd }}@df_postgres:5432/{{ harmonize_db}}
    network_mode: bridge


  mipmap_etl:
    image: "hbpmip/mipmap"
    container_name: "mipmap"
    volumes:
      - "${mipmap_map}:/opt/map:rw"
      - "${mipmap_source}:/opt/source:rw"
      - "${mipmap_pgproperties}:/opt/postgresdb.properties:rw"
    environment:
      - mipmap_db_host=df_postgres
      - mipmap_db_port=5432
      - mipmap_db_name={{ mipmap_db }}
      - mipmap_db_user={{ postgresql_user }}
      - mipmap_db_password={{ postgresql_pwd }}
      - i2b2_db_host=df_postgres
      - i2b2_db_port=5432
      - i2b2_db_name={{ capture_db }}
      - i2b2_db_user={{ postgresql_user }}
      - i2b2_db_password={{ postgresql_pwd }}
      - i2b2_db_harmonized_host=df_postgres
      - i2b2_db_harmonized_port=5432
      - i2b2_db_harmonized_name={{ harmonize_db}}
      - i2b2_db_harmonized_user={{ postgresql_user }}
      - i2b2_db_harmonized_password={{ postgresql_pwd }}
    external_links:
      - "{{ postgresql_container }}:df_postgres"
    command: ['/opt/map/run.sh']
    network_mode: bridge
